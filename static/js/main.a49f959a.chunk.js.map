{"version":3,"sources":["utils/utils.ts","components/Video.tsx","api/api.ts","redux/appReducer.ts","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx"],"names":["formatTime","timeInSeconds","result","Date","toISOString","substr","minutes","seconds","Video","source","useSelector","state","app","data","url","poster","media","useRef","useState","currentVideoTime","setCurrentVideoTime","duration","setDuration","slider","setSlider","progress","setProgress","progressDuration","setProgressDuration","paused","setPaused","volume","setVolume","muted","setMuted","playPause","current","ended","play","pause","className","ref","onTimeUpdate","time","Math","round","currentTime","onLoadedMetadata","onClick","src","id","value","max","min","type","step","onChange","e","currentTarget","valueAsNumber","onMouseUp","onMouseDown","xmlns","width","height","viewBox","d","data-title","document","fullscreenElement","exitFullscreen","requestFullscreen","videoAPI","axios","get","initState","appInitStatus","loadDataStatus","setAppInitStatus","setLoadDataStatus","App","dispatch","useDispatch","init","useEffect","then","res","catch","err","finally","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a49f959a.chunk.js","sourcesContent":["export const formatTime = (timeInSeconds: number) => {\r\n    const result = new Date(timeInSeconds * 1000).toISOString().substr(11, 8);\r\n\r\n    return {\r\n        minutes: result.substr(3, 2),\r\n        seconds: result.substr(6, 2),\r\n    };\r\n};","import React, {ChangeEvent, useRef, useState} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../redux/store\";\r\nimport './Video.css'\r\nimport {formatTime} from \"../utils/utils\";\r\n\r\nexport function Video() {\r\n    const source = useSelector<AppRootStateType, string>(state => state.app.data[0].url)\r\n    const poster = useSelector<AppRootStateType, string>(state => state.app.data[1].url)\r\n    const media = useRef<HTMLVideoElement>(null!)\r\n\r\n    const [currentVideoTime, setCurrentVideoTime] = useState({minutes: '00', seconds: '00'})\r\n    const [duration, setDuration] = useState({minutes: '00', seconds: '00'})\r\n    const [slider, setSlider] = useState(0)\r\n    const [progress, setProgress] = useState(0)\r\n    const [progressDuration, setProgressDuration] = useState(0)\r\n    const [paused, setPaused] = useState(true)\r\n    const [volume, setVolume] = useState(1)\r\n    const [muted, setMuted] = useState(false)\r\n\r\n    const playPause = () => {\r\n        if (media.current.paused || media.current.ended) {\r\n            media.current.play()\r\n            setPaused(false)\r\n        } else {\r\n            media.current.pause()\r\n            setPaused(true)\r\n        }\r\n    }\r\n\r\n    const stopVideo = () => {\r\n        media.current.pause()\r\n        media.current.currentTime = 0\r\n        setPaused(true)\r\n    }\r\n\r\n    const onTimeUpdate = () => {\r\n        const time = formatTime(Math.round(media.current.currentTime))\r\n        setCurrentVideoTime(time)\r\n        setSlider(media.current.currentTime)\r\n        setProgress(media.current.currentTime)\r\n    }\r\n\r\n    const setVideo = () => {\r\n        const time = formatTime(Math.round(media.current.duration))\r\n        setProgressDuration(Math.round(media.current.duration))\r\n        setDuration(time)\r\n        setPaused(media.current.paused)\r\n        setVolume(media.current.volume)\r\n        setMuted(media.current.muted)\r\n    }\r\n\r\n    const onChangeSlider = (e: ChangeEvent<HTMLInputElement>) => {\r\n        media.current.currentTime = e.currentTarget.valueAsNumber\r\n        setSlider(e.currentTarget.valueAsNumber)\r\n    }\r\n\r\n    const onSliderMouseDown = () => {\r\n        media.current.pause()\r\n    }\r\n\r\n    const onSliderMouseUp = () => {\r\n        media.current.play()\r\n    }\r\n\r\n    const onChangeVolume = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (media.current.muted) {\r\n            media.current.muted = false\r\n        }\r\n        media.current.volume = e.currentTarget.valueAsNumber\r\n        setVolume(e.currentTarget.valueAsNumber)\r\n    }\r\n\r\n    const toggleMute = () => {\r\n        media.current.muted = !media.current.muted\r\n        setMuted(!muted)\r\n    }\r\n\r\n    const toggleFullScreen = () => {\r\n        if (document.fullscreenElement) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            media.current.requestFullscreen();\r\n        }\r\n    }\r\n\r\n    const volumeIcon = () => {\r\n        // if (volume > 0.5) {\r\n        //     return <svg id=\"volume-high\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n        //         <path d=\"M14.016 3.234q3.047 0.656 5.016 3.117t1.969 5.648-1.969 5.648-5.016 3.117v-2.063q2.203-0.656 3.586-2.484t1.383-4.219-1.383-4.219-3.586-2.484v-2.063zM16.5 12q0 2.813-2.484 4.031v-8.063q1.031 0.516 1.758 1.688t0.727 2.344zM3 9h3.984l5.016-5.016v16.031l-5.016-5.016h-3.984v-6z\"/>\r\n        //     </svg>\r\n        // } else if (volume > 0) {\r\n        //     return <svg id=\"volume-low\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n        //         <path d=\"M5.016 9h3.984l5.016-5.016v16.031l-5.016-5.016h-3.984v-6zM18.516 12q0 2.766-2.531 4.031v-8.063q1.031 0.516 1.781 1.711t0.75 2.32z\"/>\r\n        //     </svg>\r\n        // } else {\r\n        //     return <svg id=\"volume-mute\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n        //         <path d=\"M12 3.984v4.219l-2.109-2.109zM4.266 3l16.734 16.734-1.266 1.266-2.063-2.063q-1.547 1.313-3.656 1.828v-2.063q1.172-0.328 2.25-1.172l-4.266-4.266v6.75l-5.016-5.016h-3.984v-6h4.734l-4.734-4.734zM18.984 12q0-2.391-1.383-4.219t-3.586-2.484v-2.063q3.047 0.656 5.016 3.117t1.969 5.648q0 2.203-1.031 4.172l-1.5-1.547q0.516-1.266 0.516-2.625zM16.5 12q0 0.422-0.047 0.609l-2.438-2.438v-2.203q1.031 0.516 1.758 1.688t0.727 2.344z\"/>\r\n        //     </svg>\r\n        // }\r\n        //asdasdasdasdasd\r\n        if (volume === 0 || muted) {\r\n            return <svg id=\"volume-mute\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n                <path d=\"M12 3.984v4.219l-2.109-2.109zM4.266 3l16.734 16.734-1.266 1.266-2.063-2.063q-1.547 1.313-3.656 1.828v-2.063q1.172-0.328 2.25-1.172l-4.266-4.266v6.75l-5.016-5.016h-3.984v-6h4.734l-4.734-4.734zM18.984 12q0-2.391-1.383-4.219t-3.586-2.484v-2.063q3.047 0.656 5.016 3.117t1.969 5.648q0 2.203-1.031 4.172l-1.5-1.547q0.516-1.266 0.516-2.625zM16.5 12q0 0.422-0.047 0.609l-2.438-2.438v-2.203q1.031 0.516 1.758 1.688t0.727 2.344z\"/>\r\n            </svg>\r\n        } else if (volume < 0.5) {\r\n            return <svg id=\"volume-low\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n                <path d=\"M5.016 9h3.984l5.016-5.016v16.031l-5.016-5.016h-3.984v-6zM18.516 12q0 2.766-2.531 4.031v-8.063q1.031 0.516 1.781 1.711t0.75 2.32z\"/>\r\n            </svg>\r\n        } else {\r\n            return <svg id=\"volume-high\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n                <path d=\"M14.016 3.234q3.047 0.656 5.016 3.117t1.969 5.648-1.969 5.648-5.016 3.117v-2.063q2.203-0.656 3.586-2.484t1.383-4.219-1.383-4.219-3.586-2.484v-2.063zM16.5 12q0 2.813-2.484 4.031v-8.063q1.031 0.516 1.758 1.688t0.727 2.344zM3 9h3.984l5.016-5.016v16.031l-5.016-5.016h-3.984v-6z\"/>\r\n            </svg>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={'player'}>\r\n            <video className={'video'} ref={media} poster={poster} onTimeUpdate={onTimeUpdate}\r\n                   onLoadedMetadata={setVideo} onClick={playPause}>\r\n                <source src={source}/>\r\n                Your browser doesn't support HTML5 video.\r\n            </video>\r\n            <div className={'video-controls'}>\r\n                <div className=\"video-progress\">\r\n                    <progress id=\"progress-bar\" value={progress} max={progressDuration}></progress>\r\n                    <input className=\"seek\" id=\"seek\" value={slider} min=\"0\" type=\"range\" step=\"1\"\r\n                           max={progressDuration} onChange={onChangeSlider} onMouseUp={onSliderMouseUp}\r\n                           onMouseDown={onSliderMouseDown}/>\r\n                    <div className=\"seek-tooltip\" id=\"seek-tooltip\">00:00</div>\r\n                </div>\r\n                <div className={'bottom-video-controls'}>\r\n                    <div className={'video-controls-left'}>\r\n                        <button className={'play-pause'} onClick={playPause}>\r\n                            {paused\r\n                                ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M3 22v-20l18 10-18 10z\"/></svg>\r\n                                : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M11 22h-4v-20h4v20zm6-20h-4v20h4v-20z\"/></svg>\r\n                            }\r\n                        </button>\r\n                        <button className={'stop'} onClick={stopVideo}>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M2 2h20v20h-20z\"/></svg>\r\n                        </button>\r\n                        <div className={'time'}>\r\n                            <time>{`${currentVideoTime.minutes}:${currentVideoTime.seconds} / ${duration.minutes}:${duration.seconds}`}</time>\r\n                        </div>\r\n                    </div>\r\n                    <div className={'video-controls-right'}>\r\n                        <div className=\"volume-controls\">\r\n                            <button data-title=\"Mute (m)\" className=\"volume-button\" id=\"volume-button\" onClick={toggleMute}>\r\n                                {volumeIcon()}\r\n                                {/*<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M6 7l8-5v20l-8-5v-10zm-6 10h4v-10h-4v10zm20.264-13.264l-1.497 1.497c1.847 1.783 2.983 4.157 2.983 6.767 0 2.61-1.135 4.984-2.983 6.766l1.498 1.498c2.305-2.153 3.735-5.055 3.735-8.264s-1.43-6.11-3.736-8.264zm-.489 8.264c0-2.084-.915-3.967-2.384-5.391l-1.503 1.503c1.011 1.049 1.637 2.401 1.637 3.888 0 1.488-.623 2.841-1.634 3.891l1.503 1.503c1.468-1.424 2.381-3.309 2.381-5.394z\"/></svg>*/}\r\n                            </button>\r\n\r\n                            <input className=\"volume\" id=\"volume\" type=\"range\" value={volume} max=\"1\" min=\"0\" step=\"0.01\" onChange={onChangeVolume}/>\r\n                        </div>\r\n                        <button className={'full-screen'} onClick={toggleFullScreen}>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n                                <path\r\n                                    d=\"M24 9h-4v-5h-5v-4h9v9zm-9 15v-4h5v-5h4v9h-9zm-15-9h4v5h5v4h-9v-9zm9-15v4h-5v5h-4v-9h9z\"/>\r\n                            </svg>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import axios from \"axios\";\r\n\r\nexport type DataType = {\r\n    name: string\r\n    format: string\r\n    source: string\r\n    url: string\r\n}\r\ntype ResponseType = {\r\n    status: string,\r\n    data: DataType[]\r\n}\r\n\r\nexport const videoAPI = {\r\n    getData() {\r\n        return axios.get<ResponseType>('origins-digital-test/data.json')\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {DataType, videoAPI} from \"../api/api\";\r\n\r\ntype InitStateType = typeof initState\r\nexport type StatusType = 'loading' | 'idle' | 'success' | 'failed'\r\ntype FetchDataType = ReturnType<typeof fetchData>\r\ntype SetAppInitStatus = ReturnType<typeof setAppInitStatus>\r\ntype SetLoadDataStatus = ReturnType<typeof setLoadDataStatus>\r\ntype ActionsType = FetchDataType | SetAppInitStatus | SetLoadDataStatus\r\n\r\nconst initState = {\r\n    data: [] as DataType[],\r\n    appInitStatus: 'idle' as StatusType,\r\n    loadDataStatus: 'idle' as StatusType\r\n}\r\n\r\nexport const appReducer = (state: InitStateType = initState, action: ActionsType): InitStateType => {\r\n    switch(action.type) {\r\n        case 'app/FETCH-DATA': {\r\n            return {\r\n                ...state, data: {...action.data}\r\n            }\r\n        }\r\n        case \"app/SET-INIT-STATUS\": {\r\n            return {\r\n                ...state, appInitStatus: action.appInitStatus\r\n            }\r\n        }\r\n        case \"app/SET-LOAD-DATA-STATUS\": {\r\n            return {\r\n                ...state, loadDataStatus: action.loadDataStatus\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const fetchData = (data: DataType[]) => {\r\n    return {type: 'app/FETCH-DATA', data} as const\r\n}\r\nexport const setAppInitStatus = (appInitStatus: StatusType) => {\r\n    return {type: 'app/SET-INIT-STATUS', appInitStatus} as const\r\n}\r\nexport const setLoadDataStatus = (loadDataStatus: StatusType) => {\r\n    return {type: 'app/SET-LOAD-DATA-STATUS', loadDataStatus} as const\r\n}\r\n\r\nexport const fetchDataTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setAppInitStatus('loading'))\r\n    dispatch(setLoadDataStatus('loading'))\r\n    videoAPI.getData()\r\n        .then(res => {\r\n            dispatch(fetchData(res.data.data))\r\n            dispatch(setLoadDataStatus('success'))\r\n        })\r\n        .catch(err => {\r\n            dispatch(setLoadDataStatus('failed'))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppInitStatus('success'))\r\n        })\r\n}\r\n\r\n","import React, {useEffect} from 'react';\nimport './App.css';\nimport {Video} from \"./components/Video\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {fetchDataTC, StatusType} from \"./redux/appReducer\";\nimport {AppRootStateType} from \"./redux/store\";\n\nfunction App() {\n    debugger\n    const dispatch = useDispatch()\n    const init = useSelector<AppRootStateType, StatusType>(state => state.app.appInitStatus)\n\n    useEffect(() => {\n        dispatch(fetchDataTC())\n    }, [])\n\n    if (init === 'loading') {\n        return <div>Loading</div>\n    }\n\n    return (\n        <div className={'app'}>\n            {init === 'success' && <Video/>}\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport {appReducer} from \"./appReducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n\r\n//@ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}